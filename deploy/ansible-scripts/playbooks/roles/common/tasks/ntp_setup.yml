# vim: ai et ts=2 st=2 sw=2 :
#- name: Check if we are running supported os
#  ansible.builtin.assert:
#    fail_msg: "{{ role_name }} only supports ubuntu versions 18, 20, 22, centos versions 7, and RHEL version 8!"
#    success_msg: "{{ role_name }} supports {{ ansible_distribution }} version {{ ansible_distribution_version }}"
#    quiet: "{{ not ansible_check_mode }}"
#    that:
#      ( ansible_distribution|lower == "ubuntu" and ansible_distribution_version|int in [18, 20, 22] )
#      or ( ansible_distribution|lower == "centos" and ansible_distribution_major_version|int in [7, 8] )
#      or ( ansible_distribution|lower == "redhat" and ansible_distribution_major_version|int in [8, 9] )
#      or ( ansible_distribution|lower == "fedora" and ansible_distribution_major_version|int in [38] )

## Config chrony

- name: Chrony config
  template:
    src: 'chrony.conf.j2'
    dest: '{{ chrony_path }}/chrony.conf'
    mode: '0644'
  register: chrony_conf_file

- name: Enable chrony service and start
  service:
    name: '{{ chrony_service }}'
    state: started
    enabled: True

- name: Restart chrony when config is changed
  service:
    name: '{{ chrony_service }}'
    state: restarted
  when: chrony_conf_file is changed
