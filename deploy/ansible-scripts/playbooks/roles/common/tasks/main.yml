---

- name: Load variables
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_os_family|lower }}-{{ ansible_distribution|lower }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_os_family|lower }}-{{ ansible_distribution|lower }}-{{ ansible_distribution_version }}.yml"
        - "{{ ansible_os_family|lower }}-{{ ansible_distribution|lower }}.yml"
        - "{{ ansible_os_family|lower }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_os_family|lower | replace(' ', '_')}}.yml"
        - defaults.yml
      paths:
        - ../common/vars

- name: 使用wait_for模块测试SSH连通性
  wait_for:
    host: "{{ inventory_hostname }}"
    port: 22
    state: started
    timeout: 10  # 可以根据需要调整超时时间
  ignore_errors: yes  # 忽略连接失败的错误，方便在后续统计连接失败的主机
  register: ssh_connectivity_result

- name: 检查SSH连通性测试结果并抛出错误
  block:
    - name: 显示SSH连通性测试结果
      debug:
        msg: "主机 {{ inventory_hostname }} SSH 连通性测试结果: {{ '成功' if ssh_connectivity_result.elapsed|default(-1) >= 0 else '失败' }}"
    - name: 抛出错误，如果有连接失败的机器
      fail:
        msg: "连接失败：主机 {{ inventory_hostname }} 无法建立SSH连接！"
      when: ssh_connectivity_result.elapsed is undefined or ssh_connectivity_result.elapsed < 0

- name: Check if repo URL is accessible
  uri:
    url: "{{ambari_repo_url}}/repodata/repomd.xml"
    method: GET
    status_code: 200
  register: result
  ignore_errors: yes

- name: Fail if URL is not accessible
  fail:
    msg: "Error: nexus repo URL is not accessible, please check the conf file"
  when: result.failed



- name: Remove existing ansible_tmp_dir  {{ ansible_tmp_dir }}
  file:
    path: "{{ ansible_tmp_dir }}"
    state: absent

- name: Create  "{{ ansible_tmp_dir }}" directory
  file:
    path: "{{ ansible_tmp_dir }}"
    state: directory


# 给所有主机配置yum源，准备基础软件环境,安装基础的依赖
- include: yum_setup.yml

- name: Install os required packages
  package:
    name: "{{ item }}"
    update_cache: yes
    state: present
  with_items: "{{ packages | join(',') }}"


- name: Install required packages
  package:
    name: "{{ item }}"
    update_cache: yes
    state: present
  with_items: "{{ packages_need_install }}"
  when: packages_need_install | length > 0


#todo 没网的情况下暂时无法安装
#- name: Install python env required modules
#  pip:
#    executable: pip3
#    name: "{{ item }}"
#  with_items: "{{ py3_modules | join(',') }}"

#todo 这里有问题，先关闭 防火墙和selinux ，然后装包，否则会被防火墙block住 reposerver

# 给所有主机linux 进行必要配置，关闭防火墙，透明大页，SElinux ,设置swap, nproc, vm，创建用户等
- include: node_setup.yml

- name: distribute cluster_clear script
  copy:
    src: cluster_clear.py
    dest: "{{ ansible_tmp_dir }}"


#cluster_clear 依赖 psmisc , 需要先安装
- name: clear all bigdata related files in cluster
  become: yes
  become_user: root
  become_method: sudo
  shell: 'python3 {{ansible_tmp_dir}}/cluster_clear.py bigtop {{ data_dirs | join(",") }} | tee -a /tmp/cluster_clear.log'
  failed_when: false

#设置ntp
- include: ntp_setup.yml

#设置系统中 python2 全局的默认编码为utf-8
- name: modify encoding
  copy:
    src: site_customize.py
    dest: /usr/lib/python2.7/site-packages/
    owner: root
    group: root
    mode: 0755
  ignore_errors: true


#- name: Prepare the packages compatible
#  include_tasks: yum_version_control.yml
#  with_items: "{{ versioned_packages }}"
#  when: versioned_packages is defined
