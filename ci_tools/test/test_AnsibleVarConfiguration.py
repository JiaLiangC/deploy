
# Generated by CodiumAI

from ci_tools.python.install_utils.conf_refactor import AnsibleVarConfiguration

import pytest

class TestAnsibleVarConfiguration:

    #  can generate ansible variables configuration
    def test_generate_ansible_variables_configuration(self):
        dynamic_variable_generator = DynamicVariableGenerator(advanced_conf)
        ansible_var_conf = AnsibleVarConfiguration("ansible_vars.yaml", dynamic_variable_generator)
        ansible_var_conf.generate_ansible_variables_conf()
        conf = ansible_var_conf.get_conf()
        assert isinstance(conf, dict)
        assert "host_groups" not in conf
        assert "group_services" not in conf

    #  can get configuration
    def test_get_configuration(self):
        dynamic_variable_generator = DynamicVariableGenerator(advanced_conf)
        ansible_var_conf = AnsibleVarConfiguration("ansible_vars.yaml", dynamic_variable_generator)
        conf = ansible_var_conf.get_conf()
        assert isinstance(conf, dict)

    #  can save configuration
    def test_save_configuration(self):
        dynamic_variable_generator = DynamicVariableGenerator(advanced_conf)
        ansible_var_conf = AnsibleVarConfiguration("ansible_vars.yaml", dynamic_variable_generator)
        ansible_var_conf.save()
        # Check if the file is saved in the correct path
        assert os.path.exists(os.path.join(ANSIBLE_PRJ_DIR, 'playbooks/group_vars', 'ansible_vars.yaml'))

    #  raises error if input 'conf' is not a dictionary
    def test_raises_error_if_input_conf_not_dictionary(self):
        dynamic_variable_generator = DynamicVariableGenerator(advanced_conf)
        ansible_var_conf = AnsibleVarConfiguration("ansible_vars.yaml", dynamic_variable_generator)
        with pytest.raises(ValueError):
            ansible_var_conf.set_conf("not a dictionary")

    #  raises error if configuration file not found
    def test_raises_error_if_configuration_file_not_found(self):
        dynamic_variable_generator = DynamicVariableGenerator(advanced_conf)
        ansible_var_conf = AnsibleVarConfiguration("nonexistent_file.yaml", dynamic_variable_generator)
        with pytest.raises(FileNotFoundError):
            ansible_var_conf.get_conf()

    #  raises error if configuration key is missing
    def test_raises_error_if_configuration_key_missing(self):
        dynamic_variable_generator = DynamicVariableGenerator(advanced_conf)
        ansible_var_conf = AnsibleVarConfiguration("ansible_vars.yaml", dynamic_variable_generator)
        with pytest.raises(InvalidConfigurationException):
            ansible_var_conf.get("missing_key")

    #  raises error if external database server IP is empty
    def test_raises_error_if_external_database_server_ip_empty(self):
        dynamic_variable_generator = DynamicVariableGenerator(advanced_conf)
        ansible_var_conf = AnsibleVarConfiguration("ansible_vars.yaml", dynamic_variable_generator)
        with pytest.raises(InvalidConfigurationException):
            ansible_var_conf._generate_database_host()

    #  can set format
    def test_set_format(self):
        dynamic_variable_generator = DynamicVariableGenerator(advanced_conf)
        ansible_var_conf = AnsibleVarConfiguration("ansible_vars.yaml", dynamic_variable_generator)
        ansible_var_conf.set_format(FileManager.FileType.JSON)
        assert ansible_var_conf.format == FileManager.FileType.JSON

    #  can set path
    def test_set_path(self):
        dynamic_variable_generator = DynamicVariableGenerator(advanced_conf)
        ansible_var_conf = AnsibleVarConfiguration("ansible_vars.yaml", dynamic_variable_generator)
        ansible_var_conf.set_path("/new/path")
        assert ansible_var_conf.conf_file_path == "/new/path/ansible_vars.yaml"

    #  can set configuration
    def test_set_configuration(self):
        dynamic_variable_generator = DynamicVariableGenerator(advanced_conf)
        ansible_var_conf = AnsibleVarConfiguration("ansible_vars.yaml", dynamic_variable_generator)
        conf = {"key": "value"}
        ansible_var_conf.set_conf(conf)
        assert ansible_var_conf.conf == conf
